{"version":3,"sources":["services/phones.js","Components/Notification.js","Components/App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPersons","post","id","delete","changedPerson","put","Notification","message","isError","selectedStyle","border","color","style","className","Title","title","Person","name","number","handleDelete","onClick","Persons","persons","map","person","key","Filter","props","onChange","handleFindChange","value","search","PersonForm","nameChange","numberChange","formSubmit","newPerson","onSubmit","type","App","useState","setPersons","setNewPerson","setSearch","notification","setNotification","createNotification","timeout","setTimeout","clearFields","useEffect","phoneService","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","found","find","window","confirm","updatedPerson","catch","phoneRetrieved","concat","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1560378.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n   return axios.get(baseUrl)\r\n   .then(response => response.data);\r\n}\r\n\r\nconst create = newPersons => {\r\n   const request = axios.post(baseUrl, newPersons);\r\n   return request.then(response => response.data);\r\n}\r\n\r\nconst remove = id => {\r\n   return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, changedPerson) => {\r\n   const request = axios.put(`${baseUrl}/${id}`, changedPerson);\r\n   return request.then(response => response.data);\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react';\r\nimport './Notification.css';\r\n\r\nconst Notification = ({message, isError}) => {\r\n   if(message === null) {\r\n      return null;\r\n   }\r\n   const errorStyle = { border: '1px solid red', color: 'red' }\r\n   const sucessStyle = { border: '1px solid green', color: 'green' }\r\n   const selectedStyle = isError ? errorStyle : sucessStyle;\r\n\r\n   return (\r\n      <div style={selectedStyle} className=\"message\">\r\n         {message}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react'\r\nimport phoneService from '../services/phones';\r\nimport Notification from './Notification';\r\n\r\nconst Title = ({ title }) =>\r\n   <h2>{title}</h2>\r\n\r\nconst Person = ({ name, number, handleDelete }) =>\r\n   <div>\r\n      {name} {number}\r\n      <button onClick={handleDelete}>delete</button>\r\n   </div>\r\n\r\nconst Persons = ({ persons, handleDelete }) =>\r\n   persons.map(person =>\r\n      <Person\r\n         key={person.name}\r\n         name={person.name}\r\n         number={person.number}\r\n         handleDelete={() => handleDelete(person)}\r\n      />\r\n   )\r\n\r\nconst Filter = (props) =>\r\n   <div>\r\n      Filter shown with\r\n      <input\r\n         onChange={props.handleFindChange}\r\n         value={props.search} />\r\n   </div>\r\n\r\nconst PersonForm = (props) => {\r\n   const { nameChange, numberChange, formSubmit, newPerson } = props;\r\n   return (\r\n      <form onSubmit={formSubmit}>\r\n         <div>\r\n            Name: <input onChange={nameChange} value={newPerson.name} />\r\n         </div>\r\n         <div>\r\n            Number: <input onChange={numberChange} value={newPerson.number} />\r\n         </div>\r\n         <div>\r\n            <button type=\"submit\">Add</button>\r\n         </div>\r\n      </form>\r\n   );\r\n}\r\n\r\nconst App = () => {\r\n   const [persons, setPersons] = useState([]);\r\n   const [newPerson, setNewPerson] = useState({ name: '', number: '' });\r\n   const [search, setSearch] = useState('');\r\n   const [notification, setNotification] = useState({message: null, isError: null});\r\n\r\n   const createNotification = (message, timeout, isError) => {\r\n      setNotification({message, isError});\r\n      setTimeout(() => {\r\n         setNotification({message: null, isError: null});\r\n      }, timeout);\r\n   }\r\n\r\n   const clearFields = () => {\r\n      setNewPerson({\r\n         name: '',\r\n         number: ''\r\n      });\r\n   }\r\n\r\n   const getData = () => {\r\n      phoneService\r\n         .getAll()\r\n         .then(persons => {\r\n            setPersons(persons);\r\n         });\r\n   }\r\n   useEffect(getData, []);\r\n\r\n   const addPerson = () => {\r\n      phoneService\r\n         .create(newPerson)\r\n         .then(phoneRetrieved => {\r\n            setPersons(persons.concat(phoneRetrieved));\r\n            clearFields();\r\n            createNotification(`Added ${phoneRetrieved.name} to your phonebook`, 3000, false);\r\n         });\r\n   }\r\n\r\n   const deletePerson = (person) => {\r\n      if (window.confirm(`${person.name} will be deleted. Proceed?`)) {\r\n         phoneService.remove(person.id);\r\n         setPersons(persons.filter(p => p.id !== person.id))\r\n      }\r\n   }\r\n\r\n   const handleFindChange = (event) =>\r\n      setSearch(event.target.value);\r\n\r\n   const handleNameChange = (event) =>\r\n      setNewPerson({ ...newPerson, name: event.target.value });\r\n\r\n   const handleNumberChange = (event) =>\r\n      setNewPerson({ ...newPerson, number: event.target.value });\r\n\r\n   const handleFormSubmit = (event) => {\r\n      event.preventDefault();\r\n      let found = persons.find(person => person.name === newPerson.name);\r\n      if(found) {\r\n         let response = window\r\n         .confirm(`${found.name} is already added to phonebook, replace the old number with a new one?`);\r\n         if(response) {\r\n            const changedPerson = {\r\n               name: found.name,\r\n               number: newPerson.number\r\n            }\r\n            phoneService.update(found.id, changedPerson)\r\n            .then(updatedPerson => {\r\n               setPersons(persons\r\n                  .map(person => person.id !== updatedPerson.id \r\n                     ? person : updatedPerson))\r\n               clearFields();\r\n               createNotification(`Number of ${updatedPerson.name} changed sucessfully`, 3000, false);\r\n            }).catch(() => {\r\n               createNotification(`${found.name} has already been removed from the server`, 3000, true);\r\n               setPersons(persons.filter(person => person.id !== found.id));\r\n               clearFields();\r\n            });\r\n         }\r\n      } else {\r\n         addPerson();\r\n      }\r\n   }\r\n\r\n   const personsToShow = search === '' ? persons :\r\n      persons.filter(person =>\r\n         person.name.toLowerCase()\r\n            .includes(search.toLowerCase()));\r\n\r\n   return (\r\n      <div>\r\n         <Title title='Phonebook' />\r\n         <Notification message={notification.message} \r\n            isError={notification.isError} />\r\n         <Filter handleFindChange={handleFindChange}\r\n            search={search} />\r\n         <Title title='Add a new' />\r\n         <PersonForm nameChange={handleNameChange}\r\n            numberChange={handleNumberChange}\r\n            formSubmit={handleFormSubmit}\r\n            newPerson={newPerson} />\r\n         <Title title=\"Numbers\" />\r\n         <Persons persons={personsToShow}\r\n            handleDelete={deletePerson} />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}